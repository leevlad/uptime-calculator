# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rake db:seed (or created alongside the db with db:setup).
#
# Examples:
#
#   cities = City.create([{ name: 'Chicago' }, { name: 'Copenhagen' }])
#   Mayor.create(name: 'Emanuel', city: cities.first)

services = [
  "Admin1",
  "Adobe API",
  "Apple iCloud",
  "AWS NATs",
  "AWS us-east",
  "BMO",
  "CDS API",
  "CDS DB (RDS)",
  "CDS Sidekiq",
  "Converter Service",
  "Didit",
  "DNS Made Easy",
  "DynamoDB",
  "Elastic Map-Reduce (EMR)",
  "Elasticsearch",
  "ETL Processors",
  "Facebook API",
  "Fastly",
  "gems.500px.net",
  "GitHub",
  "Google Auth",
  "Kinesis",
  "Mandrill",
  "Media Service",
  "Mobile BFF",
  "Mobile BFF memcached",
  "Mobile BFF Redis",
  "Monolith API",
  "Monolith App",
  "Monolith cron",
  "Monolith memcached",
  "Monolith MongoDB",
  "Monolith MySQL Master",
  "Monolith MySQL Slave",
  "Monolith Redis",
  "Monolith Sidekiq",
  "Newsletter Sender",
  "Notifications DB (RDS)",
  "Notifications Indexer",
  "Notifications Query Service",
  "Optimizely",
  "OVH-AWS Link",
  "OVH-BHS",
  "PackageCloud",
  "Parse",
  "PayPal",
  "Portfolios App",
  "Portfolios MongoDB",
  "Portfolios Redis",
  "Portfolios Sidekiq",
  "Prime App",
  "Prime Crons",
  "Prime memcached",
  "Prime Redis",
  "Prime Sidekiq",
  "Redshift",
  "Resize Service",
  "Roshi",
  "S3",
  "Salesforce",
  "Search Indexer",
  "Search Service",
  "Stripe",
  "Taplytics",
  "Timelines Indexer",
  "Timelines Query Service",
  "TravisCI",
  "Twitter API",
  "Unbounce",
  "VCG Forwarder",
  "VCG MongoDB Tailer",
  "VCG MySQL Tailer",
  "vcg.me",
  "Vision Classifier",
  "Vision DB (RDS)",
  "Vision Indexer",
  "Vision Query Service",
  "Votes MySQL Master",
  "Votes MySQL Slave",
  "Web BFF",
  "Web BFF memcached",
  "Web BFF Redis",
  "wp-engine"
]

features = [
  "Community e-mail notifications",
  "Lightroom - Publish",
  "Lightroom - Sync photos",
  "Mobile - 500px.me redirect banner",
  "Mobile - A/B Testing",
  "Mobile - Create photo comment",
  "Mobile - Discovery",
  "Mobile - Gallery deep links",
  "Mobile - Home feed",
  "Mobile - Like photo",
  "Mobile - Follow user",
  "Mobile - Login and Registration",
  "Mobile - Photo Upload",
  "Mobile - Photo view",
  "Mobile - Push Notifications",
  "Mobile - Request App Store review",
  "Mobile - Search",
  "Mobile - View galleries",
  "Mobile - View Notifications",
  "Portfolios - Edit",
  "Portfolios - Publish",
  "Portfolios - Send mail",
  "Portfolios - View",
  "Post activity to Facebook",
  "Web - A/B Testing",
  "Web - Activity",
  "Web - Admin Pages",
  "Web - Create photo comment",
  "Web - Discovery",
  "Web - Following",
  "Web - Gallery view",
  "Web - Groups post",
  "Web - Home feed",
  "Web - Like photo",
  "Web - Follow user",
  "Web - Logged-out homepage",
  "Web - Login & Registration",
  "Web - Organizer",
  "Web - Photo upload",
  "Web - Recurring payments",
  "Web - Search",
  "Web - Static Sites",
  "Web - Upgrade Subscription",
  "Web - User profile view",
  "Web - User settings page",
  "Web - User stats",
  "Web - View Notifications",
  "Web - View photo",
  "Community - Submit to Marketplace",
  "Marketplace - Admin Pages",
  "Marketplace - Cart Functionality",
  "Marketplace - Checkout",
  "Marketplace - Comp download",
  "Marketplace - Creative services",
  "Marketplace - Dropbox integration",
  "Marketplace - Email notifications",
  "Marketplace - Galleries",
  "Marketplace - Lightboxes",
  "Marketplace - Login",
  "Marketplace - Registration",
  "Marketplace - Search (querying)",
  "Marketplace - Search Results Page",
  "Marketplace - Static pages",
  "Marketplace - Unavailable workflow",
  "Marketplace - User profile page",
  "Marketplace - User settings",
  "Marketplace - view photo",
  "Marketplace - Curator tool",
  "ISO - Post comment",
  "ISO - Post content",
  "ISO - View",
  "Landing pages",
  "Marketing - Free bundle pages",
  "Weekly newsletters",
  "Client - Google Backdrop",
  "Client - Haystack",
  "Client - Roku",
  "Client - SonyTV",
  "Content curation batch download",
  "Content curation batch processing",
  "Distributor batch generation",
  "Supplier ingestion",
  "500px.com -> 500px.me sync",
  "500px.me -> 500px.com sync",
  "Go Deployments",
  "Other third-party clients",
  "Performant image rendering",
  "Periscope.io metrics",
  "Ruby deployments",
  "Store image rendering"
]

services.each do |service_name|
  Service.create(name: service_name)
end

features.each do |feature_name|
  Feature.create(name: feature_name)
end
